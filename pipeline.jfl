pipeline {
    agent any

    environment {
        DOCKER_HUB = credentials('docker-hub-username') // Jenkins ID for Docker Hub credentials
        IMAGE_TAG = 'latest'
    }

    stages {
        stage('Cleanup Workspace') {
            steps {
                cleanWs() // Jenkins built-in: wipes workspace before continuing
            }
        }
        stage('Checkout') {
            steps {
                git url: 'https://github.com/ranyabrkumar/Containerization_Container_Orchestration.git', branch: 'main'
            }
        }

        stage('Build Backend Docker Image') {
            steps {
                dir('backend') {
                    sh 'echo $DOCKER_HUB_USR | cut -d":" -f1' // Debug: show username (optional)
                    sh 'echo $DOCKER_HUB_PSW | wc -c'        // Debug: show password length (optional)
                    sh 'echo $DOCKER_HUB_PSW | docker login -u $DOCKER_HUB_USR --password-stdin'
                    sh 'docker build -t $DOCKER_HUB_USR/learner-backend:$IMAGE_TAG .'
                    sh 'docker push $DOCKER_HUB_USR/learner-backend:$IMAGE_TAG'
                }
            }
        }

        stage('Build Frontend Docker Image') {
            steps {
                dir('frontend') {
                    sh 'echo $DOCKER_HUB_PSW | docker login -u $DOCKER_HUB_USR --password-stdin'
                    sh 'docker build -t $DOCKER_HUB_USR/learner-frontend:$IMAGE_TAG .'
                    sh 'docker push $DOCKER_HUB_USR/learner-frontend:$IMAGE_TAG'
                }
            }
        }
        stage('Set kubeconfig') {
            steps {
                sh 'aws eks --region us-west-2 update-kubeconfig --name helm-app-deployment'

            }
        }
        stage('Cleanup Old Helm Releases') {
            steps {
                sh '''
                    helm uninstall backend || true
                    helm uninstall frontend || true
                    helm uninstall mongo || true
                '''
            }
        }
        stage('Deploy using Helm') {
            steps {
                sh 'helm create learnerreport'

                sh 'helm install backend ./learnerreport --values ./learnerreport/values_be.yaml'
                sh 'helm install frontend ./learnerreport --values ./learnerreport/values_fe.yaml'
                sh 'helm install mongo ./learnerreport --values ./learnerreport/values_db.yaml'
                sh 'helm list --all-namespaces'
                sh 'sleep 60'
                sh 'kubectl get pods'
                sh 'kubectl get nodes'
            }
        }
    }
}
